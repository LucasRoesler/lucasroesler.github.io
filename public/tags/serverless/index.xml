<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serverless on Lucas Roesler</title>
    <link>https://lucasroesler.com/tags/serverless/</link>
    <description>Recent content in serverless on Lucas Roesler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Dec 2021 00:00:00 +0200</lastBuildDate><atom:link href="https://lucasroesler.com/tags/serverless/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A foray into OpenTelemetry with OpenFaaS</title>
      <link>https://lucasroesler.com/posts/2021/opentelemetry-and-openfaas/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/opentelemetry-and-openfaas/</guid>
      <description>I have always been a fan of tracing. My first taste of it was with NewRelic, but the development of OpenTracing and more recently OpenTelemetry have made it an easy must have in every project I start. I have created a new walk-through: Tracing and Observability with OpenFaaS to show you how to add OpenTelemetry to your Python Flask functions.
This post won&amp;rsquo;t go through the walk-through, the walk-through already does that.</description>
    </item>
    
    <item>
      <title>Using Tox and PyTest with OpenFaaS</title>
      <link>https://lucasroesler.com/posts/2021/test-python-functions/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/test-python-functions/</guid>
      <description>I think it is an uncontroversial statement to say testing is important in software development. Writing tests may not always be fun, but nothing is a sweet as that moment when a unit test catches a bug before you deploy.
In OpenFaaS we have tons of tests in each project, even the certifier itself runs a short suite of end-to-end tests. But, not all of our function templates have first class testing support.</description>
    </item>
    
    <item>
      <title>Event driven functions powered by Postgres</title>
      <link>https://lucasroesler.com/posts/2021/event-driven-faasd-with-postgres/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/event-driven-faasd-with-postgres/</guid>
      <description>&lt;p&gt;An event-driven architecture can let you seamlessly extend your application or improve the scalability, if you can handle the eventual consistency. But your app may not be ready for this yet, or you don&amp;rsquo;t own the code in the app. A recently added a feature to &lt;a href=&#34;https://github.com/openfaas/faasd&#34;&gt;&lt;code&gt;faasd&lt;/code&gt;&lt;/a&gt; got me thinking about event driven architecture powered by the Postgres WAL. Which means we can seamlessly extend your app without needing to change the app!&lt;/p&gt;
&lt;p&gt;This post will show you how to quickly deploy Postgresql along with an event listener and some custom functions. From there itâ€™s up to you what you build.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
