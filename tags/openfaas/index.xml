<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openfaas on Lucas Roesler</title>
    <link>https://lucasroesler.com/tags/openfaas/</link>
    <description>Recent content in openfaas on Lucas Roesler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 03 Aug 2021 00:00:00 +0200</lastBuildDate><atom:link href="https://lucasroesler.com/tags/openfaas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Easy settings management for Python functions with Pydantic</title>
      <link>https://lucasroesler.com/posts/2021/pydantic-settings-for-openfaas-functions/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/pydantic-settings-for-openfaas-functions/</guid>
      <description>File this under quick tips and tricks for Python functions in OpenFaas.
I just learned about Pydantic&amp;rsquo;s support for reading settings from secret files and it fits perfectly with secrets in OpenFaaS. If you love Python or you are writing Python functions in OpenFaas, this is a great way to simplify your configuration parsing.
I am going to keep this short and sweet. Let&amp;rsquo;s say you have an OpenFaas function that needs to access a database.</description>
    </item>
    
    <item>
      <title>Using Tox and PyTest with OpenFaaS</title>
      <link>https://lucasroesler.com/posts/2021/test-python-functions/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/test-python-functions/</guid>
      <description>I think it is an uncontroversial statement to say testing is important in software development. Writing tests may not always be fun, but nothing is a sweet as that moment when a unit test catches a bug before you deploy.
In OpenFaaS we have tons of tests in each project, even the certifier itself runs a short suite of end-to-end tests. But, not all of our function templates have first class testing support.</description>
    </item>
    
    <item>
      <title>Event driven functions powered by Postgres</title>
      <link>https://lucasroesler.com/posts/2021/event-driven-faasd-with-postgres/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/event-driven-faasd-with-postgres/</guid>
      <description>&lt;p&gt;An event-driven architecture can let you seamlessly extend your application or improve the scalability, if you can handle the eventual consistency. But your app may not be ready for this yet, or you don&amp;rsquo;t own the code in the app. A recently added a feature to &lt;a href=&#34;https://github.com/openfaas/faasd&#34;&gt;&lt;code&gt;faasd&lt;/code&gt;&lt;/a&gt; got me thinking about event driven architecture powered by the Postgres WAL. Which means we can seamlessly extend your app without needing to change the app!&lt;/p&gt;
&lt;p&gt;This post will show you how to quickly deploy Postgresql along with an event listener and some custom functions. From there itâ€™s up to you what you build.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Action Packed Functions</title>
      <link>https://lucasroesler.com/posts/2019/openfaas-github-actions/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2019/openfaas-github-actions/</guid>
      <description>A quick review of GitHub Actions and how to use them for CI/CD of your OpenFaaS Functions</description>
    </item>
    
    <item>
      <title>Developing OpenFaaS KinD-ly</title>
      <link>https://lucasroesler.com/posts/2019/kind-development-for-openfaas/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2019/kind-development-for-openfaas/</guid>
      <description>Creating an isolated OpenFaaS Development environment with KinD</description>
    </item>
    
  </channel>
</rss>
