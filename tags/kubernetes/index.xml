<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Lucas Roesler</title>
    <link>https://lucasroesler.com/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Lucas Roesler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Dec 2021 00:00:00 +0200</lastBuildDate><atom:link href="https://lucasroesler.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A foray into OpenTelemetry with OpenFaaS</title>
      <link>https://lucasroesler.com/posts/2021/opentelemetry-and-openfaas/</link>
      <pubDate>Sun, 12 Dec 2021 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2021/opentelemetry-and-openfaas/</guid>
      <description>I have always been a fan of tracing. My first taste of it was with NewRelic, but the development of OpenTracing and more recently OpenTelemetry have made it an easy must have in every project I start. I have created a new walk-through: Tracing and Observability with OpenFaaS to show you how to add OpenTelemetry to your Python Flask functions.
This post won&amp;rsquo;t go through the walk-through, the walk-through already does that.</description>
    </item>
    
    <item>
      <title>Developing OpenFaaS KinD-ly</title>
      <link>https://lucasroesler.com/posts/2019/kind-development-for-openfaas/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0200</pubDate>
      
      <guid>https://lucasroesler.com/posts/2019/kind-development-for-openfaas/</guid>
      <description>Creating an isolated OpenFaaS Development environment with KinD</description>
    </item>
    
  </channel>
</rss>
